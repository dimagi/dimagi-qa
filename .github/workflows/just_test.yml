# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Just Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests against'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production
          - india

jobs:
  set_matrix:
    runs-on: ubuntu-latest
    if: ${{ !(github.event_name == 'repository_dispatch' && github.event.client_payload.environment == 'staging') }}
    outputs:
      matrix: ${{ steps.set-matrix-schedule.outputs.matrix || steps.set-matrix-deploy.outputs.matrix || steps.set-matrix-manual.outputs.matrix || steps.set-matrix-default.outputs.matrix }}
    steps:
      - id: set-matrix-schedule
        if: ${{ github.event_name  == 'schedule' }}
        run: |
          echo "::set-output name=matrix::{\"environment\": [\"staging\"]}"
      - id: set-matrix-deploy
        if: ${{ github.event_name == 'repository_dispatch' && github.event.client_payload.environment != 'staging' }}
        run: |
          echo "::set-output name=matrix::{\"environment\": [\"${{ github.event.client_payload.environment }}\"]}"
      - id: set-matrix-manual
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          echo "::set-output name=matrix::{\"environment\": [\"${{ inputs.environment }}\"]}"
      - id: set-matrix-default
        if: ${{ github.event_name != 'repository_dispatch' }}
        run: |
          echo "::set-output name=matrix::{\"environment\": [\"production\", \"staging\",\"india\"]}"

  build:
    needs: set_matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.set_matrix.outputs.matrix) }}
    concurrency:
      group: ${{ github.workflow }}-${{ matrix.environment }}
      cancel-in-progress: true
    name: Request API on '${{ matrix.environment }}'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.13
      uses: actions/setup-python@v2
      with:
        python-version: 3.13

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r RequestAPI/requirements.txt


    - name: Requests API tests with pytest
      env:
        DIMAGIQA_ENV: ${{ matrix.environment }}  #${{ secrets.DIMAGIQA_URL }}
        DIMAGIQA_PASSWORD: ${{ secrets.DIMAGIQA_API_PASSWORD }}
        DIMAGIQA_LOGIN_USER: ${{ secrets.DIMAGIQA_APILOGIN_USERNAME }}
        DIMAGIQA_LOGIN_PASS: ${{ secrets.DIMAGIQA_APILOGIN_PASSWORD }}
        DIMAGIQA_PROD_API_KEY: ${{secrets.DIMAGIQA_APIPROD_API_KEY}}
        DIMAGIQA_STAGING_API_KEY: ${{secrets.DIMAGIQA_APISTAGING_API_KEY}}
        DIMAGIQA_INDIA_API_KEY: ${{secrets.DIMAGIQA_INDIA_API_KEY}}
      run: |
        echo "client_payload: ${{ toJson(github.event.client_payload) }}"
        echo "matrix environment: ${{ matrix.environment }}"
        echo "NOW=$(date +'%m-%d %H:%M')" >> $GITHUB_ENV
        echo ${{env.NOW}}
        pytest -v --tb=short -n auto --dist=loadfile --reruns 1 --html=report_api_${{ matrix.environment }}.html --self-contained-html --rootdir= RequestAPI/testCases

    - name: Parse test counts
      id: parse_counts
      if: always()
      run: |
        # Extract variables from the api_test_counts.txt file
        while IFS= read -r line; do
          echo "::set-output name=${line%=*}::${line#*=}"
        done < test_counts_${{ matrix.environment }}.txt

    - name: Archive test results
      id: artifact-upload-step
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-result-reports-${{ matrix.environment }}-${{ github.run_id }}
        path: /home/runner/work/dimagi-qa/dimagi-qa/report_api_${{ matrix.environment }}.html
        retention-days: 2

    - name: Fetch artifact ID
      run: echo 'Artifact ID is ${{ steps.artifact-upload-step.outputs.artifact-id }}'

    - name: Send Email
      uses: dawidd6/action-send-mail@v3
      if: always()
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{secrets.DIMAGIQA_MAIL_USERNAME}}
        password: ${{secrets.DIMAGIQA_MAIL_PASSWORD}}
        subject: ${{ github.event.client_payload.environment }} FAIL - Request API Tests ${{secrets.DIMAGIQA_MAIL_PASSWORD}} [#${{github.run_number}}] on branch "${{ github.ref_name }} ${{secrets.DIMAGIQA_MAIL_USERNAME}}", ${{env.NOW}}
        to: kbordoloi@dimagi.com
        from: <${{secrets.DIMAGIQA_MAIL_USERNAME}}>
        html_body: file:////home/runner/work/dimagi-qa/dimagi-qa/RequestAPI/email_fail.html
        attachments: /home/runner/work/dimagi-qa/dimagi-qa/report_api_${{ matrix.environment }}.html
        priority: normal
