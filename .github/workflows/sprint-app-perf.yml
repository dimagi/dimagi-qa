# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CICT Sprint Performance Tests

on:
  workflow_dispatch:
    inputs:
      site:
        description: 'CICT app site to capture performance of'
        required: true
        type: choice
        options:
          - CO
          - NY

jobs:

  build:

    name: Tests for '${{ inputs.site }}'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.13
        uses: actions/setup-python@v2
        with:
          python-version: 3.13

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r AppSprintPerformanceTests/CICT/requires.txt
      - name: CICT App Sprint Performance
        env:
          DIMAGIQA_USH_LOGIN_USERNAME: ${{ secrets.DIMAGIQA_USH_LOGIN_USERNAME }}
          DIMAGIQA_USH_LOGIN_PASSWORD: ${{ secrets.DIMAGIQA_USH_LOGIN_PASSWORD }}
          DIMAGIQA_USH_USER_PROD_AUTH_KEY: ${{ secrets.DIMAGIQA_USH_USER_PROD_AUTH_KEY }}

        run: |
          echo "client_payload: ${{ toJson(github.event.client_payload) }}"
          echo "inputs site: ${{ inputs.site }}"
          echo "NOW=$(date +'%m-%d %H:%M')" >> $GITHUB_ENV
          echo ${{env.NOW}}
          pytest -v --rootdir= AppSprintPerformanceTests/CICT/CaptureReadings/${{ inputs.site }}_test_readings.py --repeat-scope=function --appsite=${{ inputs.site }}

      - name: Set email vars
        if: ${{ success() || failure() }}
        id: configure_email
        uses: actions/github-script@v6
        env:
            JOB_STATUS: ${{ job.status }}
            CC_ENV: ${{ inputs.site }}
        with:
          script: |
            const { promises: fs } = require('fs')
            const {JOB_STATUS, NOW, CC_ENV, GITHUB_HEAD_REF} = process.env
            const prefix = `[${CC_ENV}] Sprint Perf Tests - ${JOB_STATUS.toUpperCase()} - Run #${context.runNumber}`
            const suffix = `at ${NOW}`
            let subject = `${prefix} on branch "${GITHUB_HEAD_REF}" ${suffix}`

            let bodyFile = './AppSprintPerformanceTests/CICT/email_pass.md'
            if (JOB_STATUS !== 'success') {
              bodyFile = './AppSprintPerformanceTests/CICT/email_fail.md'
            }
            let actionRunLink = context.payload.repository.html_url + `/actions/runs/${context.runId}`
            let bodyContent = await fs.readFile(bodyFile, 'utf8')
            bodyContent = bodyContent.replace(/{{actionRunLink}}/g, actionRunLink)
                .replace(/{{runNumber}}/g, context.runNumber)
                .replace(/{{site}}/g, CC_ENV)
            let receivers = 'qa-automation@dimagi.com'
            return {
              "subject": subject,
              "body": bodyContent,
              "reference": Math.random().toString(36).substr(2),  // used to prevent threading of similar emails
              "receivers": receivers
            }
      - name: Send Result Email
        if: ${{ success() || failure() }}
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{secrets.DIMAGIQA_MAIL_USERNAME}}
          password: ${{secrets.DIMAGIQA_MAIL_PASSWORD}}
          subject: ${{ fromJSON(steps.configure_email.outputs.result).subject }}
          to: ${{ fromJSON(steps.configure_email.outputs.result).receivers }}
          from: <${{secrets.DIMAGIQA_MAIL_USERNAME}}>
          html_body: ${{ fromJSON(steps.configure_email.outputs.result).body }}
          convert_markdown: true
          attachments: ${{ github.workspace }}/report.html , ./common_utilities/OutputFiles//${{ inputs.site }}_readings.xlsx
          in_reply_to: ${{ fromJSON(steps.configure_email.outputs.result).reference }}

      - name: Archive test results
        if: ${{ success() || failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: report_and_reading-${{ inputs.site }}
          path: ${{ github.workspace }}/report.html
          retention-days: 2

      - name: Archive readings
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: report_and_reading-${{ inputs.site }}
          path: ./common_utilities/OutputFiles//${{ inputs.site }}_readings.xlsx
          retention-days: 2
